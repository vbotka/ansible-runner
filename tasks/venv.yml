---

- name: "Venv: Install packages for Python virtual environment."
  ansible.builtin.include_tasks: fn/packages.yml
  vars:
    ar_packages_incl: "{{ ar_virtualenv_packages }}"
  when: ar_virtualenv_packages|length > 0

- name: Install Ansible Lint PyPI packages for ar_owner
  block:

    - name: "Venv: Install Ansible PyPI packages for {{ ar_owner }}"
      become_user: "{{ ar_owner }}"
      become: true
      # changed_when: result.changed
      ansible.builtin.pip:
        name: "{{ item.name }}"
        # executable: "{{ ar_pip_executable }}"
        # extra_args: "{{ ar_pip_extraagrs | d(omit) }}"
        version: "{{ item.version | d(omit) }}"
        state: "{{ item.state | d(omit) }}"
        virtualenv: "{{ ar_virtualenv }}"
        virtualenv_command: "{{ ar_virtualenv_command | d(omit) }}"
        virtualenv_python: "{{ ar_virtualenv_python | d(omit) }}"
        virtualenv_site_packages: "{{ ar_virtualenv_site_packages | d(omit) }}"
      loop: "{{ ar_pip_packages }}"
      register: result
      until: result is succeeded
      retries: "{{ pip_install_retries }}"
      delay: "{{ pip_install_delay }}"

    - name: "Venv: Debug PyPI packages"
      ansible.builtin.debug:
        var: result
      when: ar_debug | bool

  rescue:

    - name: "Venv: Rescue PyPI packages"
      ansible.builtin.fail:
        msg: |
          [ERR] task {{ ansible_failed_task.name }} failed.
          ansible_failed_task:
            {{ ansible_failed_task | to_yaml(indent=2) | indent(2) }}
          ansible_failed_result:
            {{ ansible_failed_result | to_yaml(indent=2) | indent(2) }}

# EOF
...
