---
# defaults ansible_runner

ar_pkg_install: false
ar_pip_install: false
ar_venv_install: false

ar_packages_state: present
# ar_packages see vars/defaults
ar_pip_packages_state: present
ar_pip_packages:
  - name: ansible-runner
    state: "{{ ar_pip_packages_state }}"

ar_debug: false
ar_backup_conf: false

ar_supported_linux_family: [RedHat, Debian]
ar_pip_extraagrs: --user --upgrade

# Sanity
ar_sanity: true
# Test ar_pip_install, ar_venv_install, and ar_pkg_install are mutually exclusive
ar_sanity_pip_exclusive: true
# Test ar_owner is defined
ar_sanity_pip_owner_defined: "{{ ar_pip_install }}"
# Test ar_pip_executable exists
ar_sanity_pip_exists: "{{ ar_pip_install }}"

# FreeBSD
freebsd_install_retries: 3
freebsd_install_delay: 10
freebsd_install_method: packages
# freebsd_install_method: ports
freebsd_use_packages: true

# Linux
linux_install_retries: 3
linux_install_delay: 10

# pip
pip_install_retries: 3
pip_install_delay: 10

# venv
ar_virtualenv: $HOME/env

# Config
ar_config: []

# Links
ar_links: []

# Override OS specific variables. See tasks/vars.yml
# ar_packages_override:
#   - ansible-runner-devel
# ar_pip_executable_override: /usr/bin/pip4
# ar_pip_requirements_override: ''

# EOF
...
